<?php

use \Drupal\isueo_helpers\ISUEOHelpers\Typesense;

/**
 * Implements hook_ENTITY_TYPE_delete().
 */

function ts_extension_content_node_delete(Drupal\Core\Entity\EntityInterface $entity)
{
  try {
    $config = Drupal::config('ts_extension_content.settings');
    $client = Typesense::getClient($config->get('api_key'));

    $contentTypes = $config->get('content_types');

    if (in_array($entity->bundle(), $contentTypes)) {
      $client->collections[$config->get('collection')]->documents[$config->get('site_name') . ':' . $entity->id()]->delete();
    }
  } catch (Exception $e) {
    Drupal::logger('ts_extension_content')->error('Deleting a node in Typesense: ' . $e->getMessage());
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */

function ts_extension_content_node_update(Drupal\Core\Entity\EntityInterface $entity)
{
  $config = Drupal::config('ts_extension_content.settings');

  $contentTypes = $config->get('content_types');

  if (in_array($entity->bundle(), $contentTypes)) {
    if ($entity->isPublished()) {
      Typesense::index_node($entity, $config->get('api_key'), $config->get('collection'), $config->get('site_name'), $config->get('home_url'));
    } else {
      if ($entity->original->isPublished()) {
        ts_extension_content_node_delete($entity);
      }
    }
  }
}

function ts_extension_content_index_all_nodes()
{
  try {
    $config = Drupal::config('ts_extension_content.settings');
    $contentTypes = array_values($config->get('content_types'));

    ts_extension_content_delete_all_from_collection();

    foreach ($contentTypes as $type) {
      $nodes = \Drupal::entityTypeManager()->getStorage('node')->loadByProperties(['type' => $type, 'status' => 1,]);
      foreach ($nodes as $node) {
        Typesense::index_node($node, $config->get('api_key'), $config->get('collection'), $config->get('site_name'), $config->get('home_url'));
      }
    }
  } catch (Exception $e) {
    Drupal::logger('ts_extension_content')->error('Indexing all nodes in Typesense: ' . $e->getMessage());
  }
}

function ts_extension_content_delete_all_from_collection($sitename = '')
{
  $config = Drupal::config('ts_extension_content.settings');
  $client = Typesense::getClient($config->get('api_key'));
  $sitename = empty($sitename) ? $config->get('site_name') : $sitename;
  $client->collections[$config->get('collection')]->documents->delete(['filter_by' => 'site_name:=' . $sitename,]);
}
